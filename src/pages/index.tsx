import type { NextPage } from 'next';
import Head from 'next/head';
import { SubmitHandler, useForm } from 'react-hook-form';
import { z } from 'zod';
import { trpc } from '../utils/trpc';
import { zodResolver } from '@hookform/resolvers/zod';
import toast from 'react-hot-toast';

const schema = z.object({
	name: z.string().min(4),
	teams: z.number().min(2).max(30),
});

type Schema = z.infer<typeof schema>;

const Home: NextPage = () => {
	const {
		register,
		formState: { errors, isValid },
		handleSubmit,
	} = useForm<Schema>({ resolver: zodResolver(schema), mode: 'onTouched' });
	const { isLoading, mutate } = trpc.useMutation(['games.new'], {
		onError: (error) => {
			toast.error(error.message);
		},
		onSuccess: (data) => {
			toast.success(`Game ${data.name} Created`);
		},
	});

	const onSubmit: SubmitHandler<Schema> = (data) => mutate(data);

	return (
		<>
			<Head>
				<title>Teams</title>
				<meta name='description' content='Generated by create-t3-app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>

			<main className='container mx-auto max-w-xs py-10'>
				<h1 className='mb-10 text-center text-3xl'>New Game</h1>

				<form onSubmit={handleSubmit(onSubmit)} className='grid justify-center gap-4'>
					<div className='grid'>
						<label htmlFor='name' className='mb-3'>
							Name of Game
						</label>
						<input {...register('name')} type='text' id='name' className=' rounded-lg text-black' />
						<span className='text-sm text-red-500'>{errors.name?.message}</span>
					</div>
					<div className='grid'>
						<label htmlFor='teams'>Number of Teams</label>
						<input
							{...register('teams', { valueAsNumber: true })}
							type='number'
							id='teams'
							className='rounded-lg text-black'
						/>
						<span className='text-sm text-red-500'>{errors.teams?.message}</span>
					</div>
					<button
						type='submit'
						disabled={!isValid || isLoading}
						className='mt-3 rounded-lg bg-sky-600 py-2 hover:bg-sky-700 disabled:bg-sky-900 disabled:text-gray-400'
					>
						{isLoading ? 'Loading...' : 'Create'}
					</button>
				</form>
			</main>
		</>
	);
};

export default Home;
